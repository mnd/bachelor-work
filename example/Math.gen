module Math (
       symbolTable,
       readTable,
       showTable
       ) where

import qualified Complex as C
%%
type Complex = C.Complex Double ;


Complex plus (Complex a, Complex b)
Double plus (Double a, Double b)
{
  a + b
}

Complex minus (Complex a, Complex b)
Double minus (Double a, Double b)
{
  a - b
}

Complex root (Complex a)
Double root (Double a) when { a >= 0 }
{
  sqrt a
}

Complex root (Double a) when { a < 0 }
{
  0 C.:+ (sqrt (-a))
}

typedef readTypes = [Complex, Double];

readTypes read (String s) { read s }
String show (readTypes a) { show a }
